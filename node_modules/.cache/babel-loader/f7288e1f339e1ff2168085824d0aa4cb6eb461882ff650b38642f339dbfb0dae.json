{"ast":null,"code":"const prompts = {\n  // javascript: `let device;\n  // navigator.usb.requestDevice({ filters: [{ vendorId: 0x2341 }] })\n  // .then(selectedDevice => {\n  // \tdevice = selectedDevice;\n  // \treturn device.open();\n  // })\n  // .then(() => device.selectConfiguration(1))\n  // .then(() => device.claimInterface(2))\n  // .then(() => device.controlTransferOut({\n  // \trequestType: 'class',\n  // \trecipient: 'interface',\n  // \trequest: 0x22,\n  // \tvalue: 0x01,\n  // \tindex: 0x02}))\n  // .then(() => device.transferIn(5, 64))\n  // .then(result => {\n  // \tlet decoder = new TextDecoder();\n  // \tconsole.log('Received: ' + decoder.decode(result.data));\n  // })\n  // .catch(error => { console.log(error); });`,\n\n  javascript: ['let ', 'device; ', 'navigator.usb.requestDevice({ ', '[{ ', 'vendorId: ', '0x2341 ', '}] ', '})', '.then(selectedDevice ', '=> ', '{device ', '= ', 'selectedDevice;', 'return ', 'device.open();', '})', '.then(() ', '=> ', 'device.selectConfiguration(1))', '.then(() ', '=> ', 'device.claimInterface(2))', '.then(() ', '=> ', 'device.controlTransferOut({', 'requestType: ', \"'class',\", 'recipient: ', \"'interface',\", 'request: ', '0x22,', 'value: ', '0x01', 'index: ', '0x02}))', '.then(result ', '=> ', '{', 'let ', 'decoder ', '= ', 'new ', 'TextDecoder();', \"console.log('Recieved: ' \", \"+ \", 'decoder.decode(result.data));', '})', '.catch(error ', '=> ', '{ ', 'console.log(error); ', '});'],\n  python: ['def ', 'get_user_input(prompt): ', 'user_input ', '= ', 'input(prompt) ', 'return ', 'user_input.strip() ', 'def ', 'ask_question(question, ', 'answer): ', 'user_answer ', '= ', 'get_user_input(question ', '+ ', '\" ', '\")', 'if ', 'user_answer.lower() ', '== ', 'answer.lower(): ', 'print(\"Correct!\")', 'return ', '1', 'else: ', 'print(f\"Wrong! ', 'The ', 'correct ', 'answer ', 'is ', '{answer}.\")', 'return ', '0', 'def ', 'quiz():', 'score ', '= ', '0', 'for ', 'question, ', 'answer ', 'in ', 'random.sample(questions.items(), ', 'k=len(questions)): ', 'score ', '+= ', 'ask_question(question, ', 'answer)', 'print(f\"You ', 'scored ', '{score}/{len(questions)}.\")', 'if ', '__name__ ', '== ', '\"__main__\":', 'print(\"Welcome ', 'to ', 'the ', 'Quiz!\")', 'quiz()']\n};\nexport default prompts;","map":{"version":3,"names":["prompts","javascript","python"],"sources":["/Users/whyel/Desktop/syntactical/src/prompts.js"],"sourcesContent":["const prompts = {\n// javascript: `let device;\n// navigator.usb.requestDevice({ filters: [{ vendorId: 0x2341 }] })\n// .then(selectedDevice => {\n// \tdevice = selectedDevice;\n// \treturn device.open();\n// })\n// .then(() => device.selectConfiguration(1))\n// .then(() => device.claimInterface(2))\n// .then(() => device.controlTransferOut({\n// \trequestType: 'class',\n// \trecipient: 'interface',\n// \trequest: 0x22,\n// \tvalue: 0x01,\n// \tindex: 0x02}))\n// .then(() => device.transferIn(5, 64))\n// .then(result => {\n// \tlet decoder = new TextDecoder();\n// \tconsole.log('Received: ' + decoder.decode(result.data));\n// })\n// .catch(error => { console.log(error); });`,\n\njavascript: ['let ', 'device; ', 'navigator.usb.requestDevice({ ', '[{ ', 'vendorId: ', '0x2341 ', '}] ', '})', '.then(selectedDevice ', '=> ', '{device ', '= ', 'selectedDevice;', 'return ', 'device.open();', '})', '.then(() ', '=> ', 'device.selectConfiguration(1))', '.then(() ', '=> ', 'device.claimInterface(2))', '.then(() ', '=> ', 'device.controlTransferOut({', 'requestType: ', \"'class',\", 'recipient: ', \"'interface',\", 'request: ', '0x22,', 'value: ', '0x01', 'index: ', '0x02}))', '.then(result ', '=> ', '{', 'let ', 'decoder ', '= ', 'new ', 'TextDecoder();', \"console.log('Recieved: ' \", \"+ \", 'decoder.decode(result.data));', '})', '.catch(error ', '=> ', '{ ', 'console.log(error); ', '});'],\n\npython: ['def ', 'get_user_input(prompt): ','user_input ','= ','input(prompt) ','return ', 'user_input.strip() ','def ', 'ask_question(question, ', 'answer): ', 'user_answer ', '= ', 'get_user_input(question ', '+ ', '\" ', '\")', 'if ', 'user_answer.lower() ', '== ', 'answer.lower(): ', 'print(\"Correct!\")', 'return ','1', 'else: ', 'print(f\"Wrong! ', 'The ', 'correct ', 'answer ', 'is ', '{answer}.\")', 'return ', '0', 'def ', 'quiz():', 'score ', '= ', '0', 'for ','question, ', 'answer ', 'in ', 'random.sample(questions.items(), ', 'k=len(questions)): ', 'score ', '+= ', 'ask_question(question, ', 'answer)', 'print(f\"You ', 'scored ', '{score}/{len(questions)}.\")', 'if ', '__name__ ', '== ', '\"__main__\":', 'print(\"Welcome ', 'to ', 'the ', 'Quiz!\")', 'quiz()']\n}\n\n\n\nexport default prompts;"],"mappings":"AAAA,MAAMA,OAAO,GAAG;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,UAAU,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,gCAAgC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,uBAAuB,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,gCAAgC,EAAE,WAAW,EAAE,KAAK,EAAE,2BAA2B,EAAE,WAAW,EAAE,KAAK,EAAE,6BAA6B,EAAE,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,EAAE,+BAA+B,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,sBAAsB,EAAE,KAAK,CAAC;EAEpsBC,MAAM,EAAE,CAAC,MAAM,EAAE,0BAA0B,EAAC,aAAa,EAAC,IAAI,EAAC,gBAAgB,EAAC,SAAS,EAAE,qBAAqB,EAAC,MAAM,EAAE,yBAAyB,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAC,GAAG,EAAE,QAAQ,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAC,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,mCAAmC,EAAE,qBAAqB,EAAE,QAAQ,EAAE,KAAK,EAAE,yBAAyB,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,6BAA6B,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,aAAa,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ;AAChwB,CAAC;AAID,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}